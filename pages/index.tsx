import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { GraphQLClient, gql } from "graphql-request";
import BlogCard from "@/components/BlogCard/BlogCard";
import { GetStaticProps } from "next";
import Navbar from "@/components/Navbar/Navbar";

const graphcms = new GraphQLClient(
  "https://api-sa-east-1.hygraph.com/v2/clf03xq6b1pn101ug1qpf36pj/master"
);

const ALL_POSTS_QUERY = gql`
  query {
    posts {
      title
      slug
      coverPhoto {
        url
      }
      content {
        html
      }
      datePublished
      excerpt
      category
      author {
        name
        avatar {
          id
          url
        }
      }
      id
    }
  }
`;

type Author = {
  name: string;
  avatar: {
    id: string;
    url: string;
  };
};

type CoverPhoto = {
  url: string;
};

type Content = {
  html: string;
};

type Post = {
  author: Author;
  category: string;
  content: Content;
  coverPhoto: CoverPhoto;
  datePublished: string;
  excerpt: string;
  id: string;
  slug: string;
  title: string;
};

type AllPosts = {
  posts: Post[];
};

export const getStaticProps: GetStaticProps<AllPosts> = async () => {
  const { posts } = await graphcms.request<{ posts: Post[] }>(ALL_POSTS_QUERY);
  return {
    props: {
      posts,
    },
    revalidate: 10,
  };
};

export default function Home({ posts }: AllPosts) {
  const arrangedPosts = posts.reverse();
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <>
          <Navbar />
          <div className={styles.posts}>
            {arrangedPosts.map((post, index) => {
              return (
                <BlogCard
                  title={post.title}
                  author={post.author.name}
                  authorPic={post.author.avatar.url}
                  category={post.category}
                  datePublished={post.datePublished}
                  coverPhoto={post.coverPhoto.url}
                  slug={post.slug}
                  key={index}
                />
              );
            })}
          </div>
        </>
      </main>
    </>
  );
}
